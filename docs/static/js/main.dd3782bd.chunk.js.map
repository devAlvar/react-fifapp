{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_large","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OACI,sBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SAEI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SA1Bc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE4CC,UAAUH,GAFtD,sDAICI,MAAOF,GAJR,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,gBAAgBZ,QAKzCa,QAAQC,IAAIR,GAlBO,kBAoBZA,GApBY,4CAAH,sDCEPS,EAAc,SAAC,GAAqB,EAApBN,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAGnC,OACI,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAMtB,ECTwB,SAAEA,GAG1B,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAjBAC,qBAAW,WAEP1B,EAAQC,GACH0B,MAAK,SAAAC,GAGEH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAO1B,CAACtB,IAEGuB,EDlBiBK,CAAa5B,GAA9BO,EAAP,EAAOA,KAAMe,EAAb,EAAaA,QAgBb,OAdAP,QAAQC,IAAIM,GAgBR,qCAGA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,qCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAIYX,EAAKE,KAAK,SAAAC,GAAG,OAET,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEtC1BkB,EAAe,WAIxB,MAAoC3C,mBAAS,CAAC,sBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAaA,OACI,qCAEI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BAGQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OAEpB,cAAE,EAAF,CAECA,SAAUA,GADFA,Y,MClCjC+B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd3782bd.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes  from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // console.log('Submit Hecho');\r\n\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=Rgt2ZIU22vXujtT0w7qFHDvIvXveBHpl`;\r\n\r\n    const resp =  await fetch( url );\r\n\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_large.url\r\n        }\r\n\r\n    })\r\n\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n\r\n    // setImages(gifs);\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title,url }) => {\r\n\r\n    // console.log({id, title, url});\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n// import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [ count, setCount] = useState(0)\r\n\r\n    // const [ images, setImages] = useState([])\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n\r\n    // useEffect( () =>{\r\n    //     getGifs(category)\r\n    //         .then(imgs => setImages(imgs))\r\n    // }, [category]);\r\n\r\n\r\n\r\n    // getGifs();\r\n\r\n\r\n\r\n    \r\n    return (\r\n\r\n        <>\r\n        \r\n\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flashIn\">Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n\r\n                {\r\n                    data.map( img => (\r\n\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img} \r\n                        /> \r\n\r\n                    ))\r\n                }\r\n           \r\n\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n    \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                \r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; //{data:[], loading: true}\r\n\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['Capitán Salami']);\r\n\r\n    // const handleAdd = ()=>{\r\n\r\n    //     // categories.push('Capitán Salami'); NO SE DEBE HACER ASÍ\r\n\r\n    //     setCategories([...categories, 'Capitán Salami']);\r\n\r\n    //     // setCategories([ 'Capitán Salami', ...categories]);  si quierp que lo añada al inicio\r\n\r\n    //     // console.log(categories);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <hr/>\r\n\r\n\r\n            <ol>\r\n\r\n                {\r\n                    categories.map( category =>(\r\n\r\n                        < GifGrid\r\n                         key = { category }\r\n                         category={category}\r\n                        /> \r\n\r\n                        \r\n                    ))\r\n                    \r\n                    \r\n                }\r\n                    \r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// export default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}